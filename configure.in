AC_INIT(gk.h)

AC_PROG_CXX

dnl ########################################################################
dnl Check if recv call supports MSG_NOSIGNAL flag
AC_TRY_COMPILE([
#include <sys/types.h>
#include <sys/socket.h>
],
[recv(0,NULL,1,MSG_NOSIGNAL);], HAS_MSG_NOSIGNAL=1, HAS_MSG_NOSIGNAL=0)
if test "$HAS_MSG_NOSIGNAL" = 0 ; then
  AC_MSG_RESULT(MSG_NOSIGNAL not supported by recv() call)
else
  AC_MSG_RESULT(MSG_NOSIGNAL supported by recv() call)
  STDCCFLAGS="-DHAS_MSG_NOSIGNAL=1 $STDCCFLAGS"
fi

dnl ########################################################################
dnl look for ptlib, use a preference order of explicit PTLIBDIR, directory
dnl at same level, home directory, /usr/local or /usr.

if test "${PTLIBDIR:-unset}" != "unset" ; then
  if test -d ${PTLIBDIR}; then
  	AC_CHECK_FILE(${PTLIBDIR}/make/unix.mak, HAS_PTLIB=1)
  fi
  if test "${HAS_PTLIB:-unset}" != "unset" ; then
    AC_PATH_PROG(PTLIB_CONFIG, ptlib-config, , ${PTLIBDIR}/make)
  fi
fi
if test "${HAS_PTLIB:-unset}" = "unset" ; then
  if test -d ${HOME}/ptlib/include; then
  	AC_CHECK_FILE(${HOME}/ptlib/include/ptlib.h, HAS_PTLIB=1)
  fi
  if test "${HAS_PTLIB:-unset}" != "unset" ; then
    PTLIBDIR="${HOME}/ptlib"
    AC_PATH_PROG(PTLIB_CONFIG, ptlib-config, , ${PTLIBDIR}/make)
  else
	if test -d ../ptlib; then
  	  AC_CHECK_FILE(../ptlib/include/ptlib.h, HAS_PTLIB=1)
  	fi
  	if test "${HAS_PTLIB:-unset}" != "unset" ; then
      PTLIBDIR="../ptlib"
      AC_PATH_PROG(PTLIB_CONFIG, ptlib-config, , ${PTLIBDIR}/make)
  	else
      if test -d /usr/local/include; then
	    AC_CHECK_FILE(/usr/local/include/ptlib.h, HAS_PTLIB=1)
	  fi
      if test "${HAS_PTLIB:-unset}" != "unset" ; then
        AC_PATH_PROG(PTLIB_CONFIG, ptlib-config, , /usr/local/share/ptlib/make:/usr/local/bin:/usr/bin)
      else
	    if test -d /usr/include; then
          AC_CHECK_FILE(/usr/include/ptlib.h, HAS_PTLIB=1)
	    fi
        if test "${HAS_PTLIB:-unset}" != "unset" ; then
          AC_PATH_PROG(PTLIB_CONFIG, ptlib-config, , /usr/share/ptlib/make/)
        fi
      fi
    fi
  fi
fi

if test "${HAS_PTLIB:-unset}" = "unset" ; then
  echo "Cannot find PTLib - please install or set PTLIBDIR and try again"
  exit
fi

if test "${PTLIBDIR:-unset}" = "unset" ; then
  if test "${PTLIB_CONFIG:-unset}" = "unset" ; then
    echo "Cannot find ptlib-config - please install and try again"
    exit
  fi
  PTLIBDIR=`$PTLIB_CONFIG --prefix`
fi

echo "PTLib prefix set to $PTLIBDIR"

AC_SUBST(PTLIBDIR)

dnl ########################################################################
dnl extract the PTLIB version
if test "${PTLIB_CONFIG:-unset}" = "unset"; then
  AC_CHECK_FILE(${PTLIBDIR}/version.h, HAS_PTLIB_VERSION_FILE=1)
  if test "${HAS_PTLIB_VERSION_FILE:-unset}" != "unset"; then
    PTLIB_MAJOR_VERSION=`cat ${PTLIBDIR}/version.h | grep MAJOR_VERSION | cut -f3 -d' '`
    PTLIB_MINOR_VERSION=`cat ${PTLIBDIR}/version.h | grep MINOR_VERSION | cut -f3 -d' '`
    PTLIB_BUILD_NUMBER=`cat ${PTLIBDIR}/version.h | grep BUILD_NUMBER | cut -f3 -d' '`
    PTLIB_VERSION="${PTLIB_MAJOR_VERSION}.${PTLIB_MINOR_VERSION}.${PTLIB_BUILD_NUMBER}"
  else
    AC_CHECK_FILE(${PTLIBDIR}/ptbuildopts.h, HAS_PTLIB_VERSION_FILE=1)
	if test "${HAS_PTLIB_VERSION_FILE:-unset}" != "unset"; then
      PTLIB_MAJOR_VERSION=`cat ${PTLIBDIR}/ptbuildopts.h | grep PTLIB_MAJOR | cut -f3 -d' '`
      PTLIB_MINOR_VERSION=`cat ${PTLIBDIR}/ptbuildopts.h | grep PTLIB_MINOR | cut -f3 -d' '`
      PTLIB_BUILD_NUMBER=`cat ${PTLIBDIR}/ptbuildopts.h | grep PTLIB_BUILD | cut -f3 -d' '`
      PTLIB_VERSION="${PTLIB_MAJOR_VERSION}.${PTLIB_MINOR_VERSION}.${PTLIB_BUILD_NUMBER}"
    fi
  fi
else
  PTLIB_VERSION=`${PTLIB_CONFIG} --version`
  PTLIB_MAJOR_VERSION=[`echo "${PTLIB_VERSION}" | sed -e "s/\([0-9]*\)\.[0-9]*\.[0-9]*.*/\1/"`]
  PTLIB_MINOR_VERSION=[`echo "${PTLIB_VERSION}" | sed -e 's/[0-9]*\.\([0-9]*\)\.[0-9]*.*/\1/'`]
  PTLIB_BUILD_NUMBER=[`echo "${PTLIB_VERSION}" | sed -e 's/[0-9]*\.[0-9]*\.\([0-9]*\).*/\1/'`]
fi
if test "${PTLIB_VERSION:-unset}" = "unset" -o "${PTLIB_VERSION}" = ".."; then
  echo "Error: could not determine PWLib version"
  exit
fi

echo "PTLib version is ${PTLIB_VERSION}"

if test ${PTLIB_MAJOR_VERSION} -lt 1; then
  echo "Error: at leat PWLib version 1.7.5.2 (Pandora) required"
  exit
fi
if test ${PTLIB_MAJOR_VERSION} -eq 1; then
  if test ${PTLIB_MINOR_VERSION} -lt 7; then
    echo "Error: at leat PWLib version 1.7.5.2 (Pandora) required"
    exit
  elif test ${PTLIB_MINOR_VERSION} -eq 7; then
    if test ${PTLIB_BUILD_NUMBER} -lt 5; then
      echo "Error: at leat PWLib version 1.7.5.2 (Pandora) required"
      exit
    fi
  fi
fi

AC_SUBST(PTLIB_VERSION)

dnl ########################################################################
dnl look for OpenH323/H323plus, use a preference order of explicit OPENH323DIR, directory
dnl at same level, home directory, /usr/local or /usr.

NEEDOPENH323PREFIX=0

if test "${OPENH323DIR:-unset}" != "unset" ; then
  if test -d ${OPENH323DIR}; then
    AC_CHECK_FILE(${OPENH323DIR}/openh323u.mak, HAS_OPENH323=1)
  fi
fi
if test "${HAS_OPENH323:-unset}" = "unset" ; then
  if test -d ${PTLIBDIR}/../h323plus; then
    AC_CHECK_FILE(${PTLIBDIR}/../h323plus/version.h, HAS_OPENH323=1)
  fi
  if test "${HAS_OPENH323:-unset}" != "unset" ; then
    OPENH323DIR="${PTLIBDIR}/../h323plus"
  else
    if test -d ${HOME}/h323plus/include; then
      AC_CHECK_FILE(${HOME}/h323plus/include/h323.h, HAS_OPENH323=1)
	fi
    if test "${HAS_OPENH323:-unset}" != "unset" ; then
      OPENH323DIR="${HOME}/h323plus"
    else
	  if test -d /usr/local/include/openh323; then
        AC_CHECK_FILE(/usr/local/include/openh323/h323.h, HAS_OPENH323=1)
	  fi
      if test "${HAS_OPENH323:-unset}" != "unset" ; then
        OPENH323DIR="/usr/local"
		OPENH323INSTALLPREFIX="/usr/local"
		NEEDOPENH323PREFIX=1
      else
	    if test -d /usr/include/openh323; then
          AC_CHECK_FILE(/usr/include/openh323/h323.h, HAS_OPENH323=1)
		fi
        if test "${HAS_OPENH323:-unset}" != "unset" ; then
		  OPENH323DIR="/usr"
		  OPENH323INSTALLPREFIX="/usr"
		  NEEDOPENH323PREFIX=1
        fi
      fi
    fi
  fi
fi

if test "${HAS_OPENH323:-unset}" = "unset" ; then
  echo "Cannot find OpenH323/H323Plus - please install or set OPENH323DIR and try again"
  exit
fi

if test -d "${OPENH323DIR}/share/openh323"; then
  OPENH323MAKEDIR=${OPENH323DIR}/share/openh323/
fi

echo "OpenH323/H323Plus prefix set to $OPENH323DIR"

if test "${OPENH323MAKEDIR:-unset}" = "unset"; then
  OPENH323MAKEDIR=${OPENH323DIR}
fi

AC_SUBST(OPENH323DIR)
AC_SUBST(OPENH323MAKEDIR)

dnl ########################################################################
dnl extract the OpenH323/H323Plus version
if test -d ${OPENH323DIR}; then
  AC_CHECK_FILE(${OPENH323DIR}/version.h, HAS_OPENH323_VERSIONFILE=1)
  if test "${HAS_OPENH323_VERSIONFILE:-unset}" != "unset"; then
    OPENH323_VERSION_FILE=${OPENH323DIR}/version.h
    OPENH323_MAJOR_VERSION=`cat ${OPENH323_VERSION_FILE} | grep MAJOR_VERSION | cut -f3 -d' '`
    OPENH323_MINOR_VERSION=`cat ${OPENH323_VERSION_FILE} | grep MINOR_VERSION | cut -f3 -d' '`
    OPENH323_BUILD_NUMBER=`cat ${OPENH323_VERSION_FILE} | grep BUILD_NUMBER | cut -f3 -d' '`
    BUILDOPTS="${OPENH323DIR}/include/openh323buildopts.h"
  else
    AC_CHECK_FILE(${OPENH323MAKEDIR}/openh323buildopts.h, HAS_OPENH323_VERSIONFILE=1)
    if test "${HAS_OPENH323_VERSIONFILE:-unset}" != "unset"; then
      OPENH323_VERSION_FILE=${OPENH323MAKEDIR}/openh323buildopts.h
      OPENH323_MAJOR_VERSION=`cat ${OPENH323_VERSION_FILE} | grep "#define OPENH323_MAJOR" | cut -f3 -d' '`
      OPENH323_MINOR_VERSION=`cat ${OPENH323_VERSION_FILE} | grep "#define OPENH323_MINOR" | cut -f3 -d' '`
      OPENH323_BUILD_NUMBER=`cat ${OPENH323_VERSION_FILE} | grep "#define OPENH323_BUILD " | cut -f3 -d' '`
      BUILDOPTS="${OPENH323MAKEDIR}/openh323buildopts.h"
    else
      AC_CHECK_FILE(${OPENH323MAKEDIR}/../../include/openh323/openh323buildopts.h, HAS_OPENH323_VERSIONFILE=1)
      if test "${HAS_OPENH323_VERSIONFILE:-unset}" != "unset"; then
        OPENH323_VERSION_FILE=${OPENH323MAKEDIR}/../../include/openh323/openh323buildopts.h
        OPENH323_MAJOR_VERSION=`cat ${OPENH323_VERSION_FILE} | grep "#define OPENH323_MAJOR" | cut -f3 -d' '`
        OPENH323_MINOR_VERSION=`cat ${OPENH323_VERSION_FILE} | grep "#define OPENH323_MINOR" | cut -f3 -d' '`
        OPENH323_BUILD_NUMBER=`cat ${OPENH323_VERSION_FILE} | grep "#define OPENH323_BUILD " | cut -f3 -d' '`
        BUILDOPTS="${OPENH323MAKEDIR}/../../include/openh323/openh323buildopts.h"
      fi
    fi
  fi
fi
if test "${HAS_OPENH323_VERSIONFILE:-unset}" != "unset"; then
  if test "${OPENH323_MAJOR_VERSION}" = ""; then
    echo "Error: Could not determine OpenH323/H323Plus version"
    exit
  fi
  OPENH323_VERSION="${OPENH323_MAJOR_VERSION}.${OPENH323_MINOR_VERSION}.${OPENH323_BUILD_NUMBER}"
  echo "OpenH323/H323Plus version is ${OPENH323_VERSION}"
else
  echo "Error: Could not determine OpenH323/H323Plus version"
  exit
fi

if test ${OPENH323_MAJOR_VERSION} -lt 1; then
  echo "Error: at leat OpenH323/H323Plus version 1.14.4.2 (Pandora) required"
  exit
fi
if test ${OPENH323_MAJOR_VERSION} -eq 1; then
  if test ${OPENH323_MINOR_VERSION} -lt 14; then
    echo "Error: at leat OpenH323/H323Plus version 1.14.4.2 (Pandora) required"
    exit
  elif test ${OPENH323_MINOR_VERSION} -eq 14; then
    if test ${OPENH323_BUILD_NUMBER} -lt 4; then
      echo "Error: at leat OpenH323/H323Plus version 1.14.4.2 (Pandora) required"
      exit
    fi
  fi
fi

AC_SUBST(OPENH323_VERSION)

dnl ########################################################################
dnl set the PREFIX accordingly
if test "x$prefix" = "xNONE"; then
   INSTALLPREFIX="/usr/local"
else
   INSTALLPREFIX="${prefix}"
fi

AC_SUBST(INSTALLPREFIX)

dnl ########################################################################
dnl check for H.460.17
dnl ########################################################################

dnl MSWIN_DISPLAY    h46017,H.460.17 support
dnl MSWIN_DEFINE     h46017,HAS_H46017

AC_ARG_ENABLE(h46017,
[  --enable-h46017         enable H.460.17 support (default=yes)],
[ h46017="${enableval}" ], [h46017="yes"]
)

H460SUPPORT=`cat ${BUILDOPTS} | grep 'define H323_H460'`
if test "${H460SUPPORT:-unset}" = "unset" ; then
	if test "x${h46017}" != "xno" ; then
		AC_MSG_RESULT(No H.460 support available)
	fi
	h46017="no"
fi

if test "x${h46017}" != "xno" ; then
   HAS_H46017=1
   AC_DEFINE(HAS_H46017, 1)
   STDCCFLAGS="-DHAS_H46017=1 $STDCCFLAGS"
   echo "H.460.17 support enabled"
else
   echo "H.460.17 support disabled"
   HAS_H46017=0
fi
AC_SUBST(HAS_H46017)

dnl ########################################################################
dnl Switch for H.460.18 / .19
dnl ########################################################################

dnl MSWIN_DISPLAY    h46018,H.460.18/.19 support (check patent license)
dnl MSWIN_DEFAULT    h46018,Disabled
dnl MSWIN_DEFINE     h46018,HAS_H46018

AC_ARG_ENABLE(h46018,
[  --enable-h46018         enable H.460.18 / H.460.19 support (default=no) check patent license before enabling],
[ h46018="${enableval}" ], [h46018="no"]
)

H460SUPPORT=`cat ${BUILDOPTS} | grep 'define H323_H460'`
if test "${H460SUPPORT:-unset}" = "unset" ; then
	if test "x${h46018}" != "xno" ; then
		AC_MSG_RESULT(No H.460 support available)
	fi
	h46018="no"
fi

if test "x${h46018}" != "xno" ; then
   HAS_H46018=1
   AC_DEFINE(HAS_H46018, 1)
   STDCCFLAGS="-DHAS_H46018=1 $STDCCFLAGS"
   echo "H.460.18 / H.460.19 support enabled"
else
   echo "H.460.18 / H.460.19 support disabled"
   HAS_H46018=0
fi
AC_SUBST(HAS_H46018)

dnl ########################################################################
dnl check for H.460.23 / .24
dnl ########################################################################

dnl MSWIN_DISPLAY    h46023,H.460.23/.24 support
dnl MSWIN_DEFINE     h46023,HAS_H46023

AC_ARG_ENABLE(h46023,
[  --enable-h46023         enable H.460.23 / H.460.24 support (default=yes)],
[ h46023="${enableval}" ], [h46023="yes"]
)

H460SUPPORT=`cat ${BUILDOPTS} | grep 'define H323_H460'`
if test "${H460SUPPORT:-unset}" = "unset" ; then
	if test "x${h46023}" != "xno" ; then
		AC_MSG_RESULT(No H.460 support available)
	fi
	h46023="no"
fi

if test "x${h46023}" != "xno" ; then
   HAS_H46023=1
   AC_DEFINE(HAS_H46023, 1)
   STDCCFLAGS="-DHAS_H46023=1 $STDCCFLAGS"
   echo "H.460.23 / H.460.24 support enabled"
else
   echo "H.460.23 / H.460.24 support disabled"
   HAS_H46023=0
fi
AC_SUBST(HAS_H46023)

dnl #########################################################################
dnl Check for RADIUS
dnl ########################################################################

dnl MSWIN_DISPLAY    radius,RADIUS
dnl MSWIN_DEFAULT    radius,Disabled
dnl MSWIN_DEFINE     radius,HAS_RADIUS=1

AC_ARG_ENABLE(radius,
[  --enable-radius         enable RADIUS support (default=no)],
[ radius="${enableval}" ], [radius="no"]
)

if test "x${radius}" != "xno" ; then
   HAS_RADIUS=1
   AC_DEFINE(HAS_RADIUS, 1)
   STDCCFLAGS="-DHAS_RADIUS=1 $STDCCFLAGS"
   SOURCES="$SOURCES radproto.cxx radauth.cxx radacct.cxx"
   HEADERS="$HEADERS radproto.h radauth.h radacct.h"
   echo "RADIUS support enabled"
else
   echo "RADIUS support disabled"
   HAS_RADIUS=0
fi
AC_SUBST(HAS_RADIUS)

dnl #########################################################################
dnl Check for LARGE FDSET
dnl ########################################################################

dnl MSWIN_DISPLAY    large-fdset,LARGE_FDSET
dnl MSWIN_DEFAULT    large-fdset,Disabled
dnl MSWIN_DEFINE     large-fdset,LARGE_FDSET=1

AC_ARG_ENABLE(large-fdset,
[  --enable-large-fdset    support large number of sockets (default=no)],
[ largefdset="${enableval}" ], [largefdset="no"]
)

if test "x${largefdset}" != "xno" ; then
    LARGE_FDSET=1
    AC_DEFINE(LARGE_FDSET, 1)
   	STDCCFLAGS="-DLARGE_FDSET=1 $STDCCFLAGS"
   	echo "LARGE FDSET support enabled"
else
    LARGE_FDSET=0
	echo "LARGE FDSET support disabled"
fi
AC_SUBST(LARGE_FDSET)

dnl #########################################################################
dnl Check for MySQL
dnl ########################################################################

dnl MSWIN_DISPLAY    mysql,MySQL
dnl MSWIN_CHECK_FILE mysql,include\mysql.h,HAS_MYSQL=1
dnl MSWIN_DIR_SYMBOL mysql,MYSQL_DIR
dnl MSWIN_CHECK_DIR  mysql,\Program Files\MySQL\MySQL Server 5.0

AC_ARG_ENABLE(mysql,
[  --enable-mysql          enable MySQL support (default=yes)],
[ mysql="${enableval}" ], [ mysql="yes" ]
)

AC_ARG_WITH(mysql-include-dir,
[  --with-mysql-include-dir=DIR  directory where the MySQL includes may be found ],
[ mysql_include_dir="$withval" ]
)

AC_ARG_WITH(mysql-dir,
[  --with-mysql-dir=DIR          base directory where MySQL is installed ],
[ mysql_include_dir="$withval/include/mysql"
]
)

if test "x${mysql}" != "xno"; then

	AC_CHECK_LIB(z, compress, MYSQL_LIBS=" -lz")

	AC_MSG_CHECKING([for mysql.h])

	AC_TRY_COMPILE([#include <mysql.h>], [int a = 1;],
		MYSQL_INCLUDE=" ",
		MYSQL_INCLUDE=
	)

	if test "x$MYSQL_INCLUDE" = "x"; then
		old_CFLAGS="$CFLAGS"

		for try in /usr/include/mysql /usr/local/include/mysql /usr/local/mysql/include/mysql $mysql_include_dir/mysql; do
			if test -d $try; then
				CFLAGS="$old_CFLAGS -I$try"
				AC_TRY_COMPILE([#include <mysql.h>], [int a = 1;],
					MYSQL_INCLUDE="-I$try",
					MYSQL_INCLUDE=
				)
				if test "x$MYSQL_INCLUDE" != "x"; then
					break;
				fi
			fi
		done
		CFLAGS="$old_CFLAGS"
	fi

	if test "x$MYSQL_INCLUDE" = "x"; then
		AC_MSG_RESULT(no)
		AC_MSG_WARN([mysql headers not found. Use --with-mysql-include-dir=<path>])
		mysql="no"
	else
		sql_mysql_cflags="${sql_mysql_cflags} ${MYSQL_INCLUDE}"
		AC_MSG_RESULT(yes)
	fi

	if test "x$mysql" = "xno"; then
		AC_MSG_WARN([MySQL disabled])
	fi
else
	mysql="no"
fi

if test "x$mysql" != "xno"; then
	HAS_MYSQL=1
	AC_DEFINE(HAS_MYSQL, 1)
	SOURCES="$SOURCES gksql_mysql.cxx"
	STDCCFLAGS="${sql_mysql_cflags} -DHAS_MYSQL=1 $STDCCFLAGS"
    echo "MySQL support enabled"
else
    echo "MySQL support disabled"
	HAS_MYSQL=0
fi
AC_SUBST(HAS_MYSQL)

dnl #########################################################################
dnl Check for PostgreSQL
dnl ########################################################################

dnl MSWIN_DISPLAY    pgsql,PostgreSQL
dnl MSWIN_CHECK_FILE pgsql,\include\libpq-fe.h,HAS_PGSQL=1
dnl MSWIN_DIR_SYMBOL pgsql,PGSQL_DIR
dnl MSWIN_CHECK_DIR  pgsql,\postgresql\libpq\


AC_ARG_ENABLE(pgsql,
[  --enable-pgsql          enable PostgreSQL support (default=yes)],
[ pgsql="${enableval}" ], [ pgsql="yes" ]
)

AC_ARG_WITH(pgsql-include-dir,
[  --with-pgsql-include-dir=DIR  directory where the PostgreSQL includes may be found ],
[ pgsql_include_dir="$withval" ]
)

AC_ARG_WITH(pgsql-dir,
[  --with-pgsql-dir=DIR          base directory where PostgreSQL is installed ],
[ pgsql_include_dir="$withval/include"
]
)

if test "x${pgsql}" != "xno"; then

	AC_MSG_CHECKING([for libpq-fe.h])

	AC_TRY_COMPILE([#include <libpq-fe.h>], [int a = 1;],
		PGSQL_INCLUDE=" ",
		PGSQL_INCLUDE=
	)

	if test "x$PGSQL_INCLUDE" = "x"; then
		old_CFLAGS="$CFLAGS"

		for try in /usr/include/postgresql /usr/include/pgsql /usr/local/include /usr/local/include/pgsql /usr/local/pgsql/include $pgsql_include_dir; do
			if test -d $try; then
				CFLAGS="$old_CFLAGS -I$try"
				AC_TRY_COMPILE([#include <libpq-fe.h>], [int a = 1;],
					PGSQL_INCLUDE="-I$try",
					PGSQL_INCLUDE=
				)
				if test "x$PGSQL_INCLUDE" != "x"; then
					break;
				fi
			fi
		done
		CFLAGS="$old_CFLAGS"
	fi

	if test "x$PGSQL_INCLUDE" = "x"; then
		AC_MSG_RESULT(no)
		AC_MSG_WARN([pgsql headers not found. Use --with-pgsql-include-dir=<path>])
		pgsql="no"
	else
		sql_pgsql_cflags="${sql_pgsql_cflags} ${PGSQL_INCLUDE}"
		AC_MSG_RESULT(yes)
	fi

	if test "x$pgsql" = "xno"; then
		AC_MSG_WARN([PostgreSQL disabled])
	fi
else
	pgsql="no"
fi

if test "x$pgsql" != "xno"; then
	HAS_PGSQL=1
	AC_DEFINE(HAS_PGSQL, 1)
	SOURCES="$SOURCES gksql_pgsql.cxx"
	STDCCFLAGS="${sql_pgsql_cflags} -DHAS_PGSQL=1 $STDCCFLAGS"
    echo "PostgreSQL support enabled"
else
    echo "PostgreSQL support disabled"
	HAS_PGSQL=0
fi
AC_SUBST(HAS_PGSQL)

dnl #########################################################################
dnl Check for Firebird
dnl ########################################################################

dnl MSWIN_DISPLAY    firebird,Firebird
dnl MSWIN_CHECK_FILE firebird,include\ibase.h,HAS_FIREBIRD=1
dnl MSWIN_DIR_SYMBOL firebird,FIREBIRD_DIR

AC_ARG_ENABLE(firebird,
[  --enable-firebird       enable Interbase/Firebird support (default=yes)],
[ firebird="${enableval}" ], [ firebird="yes" ]
)

AC_ARG_WITH(firebird-include-dir,
[  --with-firebird-include-dir=DIR  directory where Firebird includes may be found ],
[ firebird_include_dir="$withval" ]
)

AC_ARG_WITH(firebird-dir,
[  --with-firebird-dir=DIR          base directory where Firebird is installed ],
[ firebird_include_dir="$withval/include"
]
)

if test "x${firebird}" != "xno"; then

	AC_MSG_CHECKING([for ibase.h])

	AC_TRY_COMPILE([#include <ibase.h>], [int a = 1;],
		FIREBIRD_INCLUDE=" ",
		FIREBIRD_INCLUDE=
	)

	if test "x$FIREBIRD_INCLUDE" = "x"; then
		old_CFLAGS="$CFLAGS"

		for try in /usr/include/firebird /usr/local/include /usr/local/include/firebird /usr/local/firebird/include $firebird_include_dir; do
			if test -d $try; then
				CFLAGS="$old_CFLAGS -I$try"
				AC_TRY_COMPILE([#include <ibase.h>], [int a = 1;],
					FIREBIRD_INCLUDE="-I$try",
					FIREBIRD_INCLUDE=
				)
				if test "x$FIREBIRD_INCLUDE" != "x"; then
					break;
				fi
			fi
		done
		CFLAGS="$old_CFLAGS"
	fi

	if test "x$FIREBIRD_INCLUDE" = "x"; then
		AC_MSG_RESULT(no)
		AC_MSG_WARN([Firebird headers not found. Use --with-firebird-include-dir=<path>])
		firebird="no"
	else
		sql_firebird_cflags="${sql_firebird_cflags} ${FIREBIRD_INCLUDE}"
		AC_MSG_RESULT(yes)
	fi

	if test "x$firebird" = "xno"; then
		AC_MSG_WARN([Firebird disabled])
	fi
else
	firebird="no"
fi

if test "x$firebird" != "xno"; then
	HAS_FIREBIRD=1
	AC_DEFINE(HAS_FIREBIRD, 1)
	SOURCES="$SOURCES gksql_firebird.cxx"
	STDCCFLAGS="${sql_firebird_cflags} -DHAS_FIREBIRD=1 $STDCCFLAGS"
    echo "Firebird support enabled"
else
    echo "Firebird support disabled"
	HAS_FIREBIRD=0
fi
AC_SUBST(HAS_FIREBIRD)

dnl #########################################################################
dnl Check for unixODBC
dnl ########################################################################


dnl MSWIN_DISPLAY    odbc,ODBC support
dnl MSWIN_CHECK_FILE odbc,include\odbcinst.h,HAS_ODBC=1
dnl MSWIN_DIR_SYMBOL odbc,ODBC_DIR
dnl MSWIN_CHECK_DIR  odbc,\Program Files\Microsoft Visual Studio 8\VC\PlatformSDK\
dnl MSWIN_CHECK_DIR  odbc,\Program Files\Microsoft Visual Studio .NET 2003\VC7\PlatformSDK\
dnl MSWIN_CHECK_DIR  odbc,\Program Files\Microsoft SDK\include\
dnl MSWIN_CHECK_DIR  odbc,\Program Files\Microsoft Platform SDK for Windows Server 2003 R2\


AC_ARG_ENABLE(unixodbc,
[  --enable-unixodbc       enable unixODBC support (default=yes)],
[ unixodbc="${enableval}" ], [ unixodbc="yes" ]
)

AC_ARG_WITH(unixodbc-include-dir,
[  --with-unixodbc-include-dir=DIR  directory where unixODBC includes may be found ],
[ unixodbc_include_dir="$withval" ]
)

AC_ARG_WITH(unixodbc-dir,
[  --with-unixodbc-dir=DIR          base directory where unixODBC is installed ],
[ unixodbc_lib_dir="$withval/lib"
  unixodbc_include_dir="$withval/include"
]
)

if test "x${unixodbc}" != "xno"; then

	AC_MSG_CHECKING([for sqlext.h])

	AC_TRY_COMPILE([#include <sqlext.h>], [int a = 1;],
		UNIXODBC_INCLUDE=" ",
		UNIXODBC_INCLUDE=
	)

	if test "x$UNIXODBC_INCLUDE" = "x"; then
		old_CFLAGS="$CFLAGS"

		for try in /usr/include/unixodbc /usr/local/include /usr/local/include/unixodbc /usr/local/unixodbc/include $unixodbc_include_dir; do
			if test -d $try; then
				CFLAGS="$old_CFLAGS -I$try"
				AC_TRY_COMPILE([#include <sqlext.h>], [int a = 1;],
					UNIXODBC_INCLUDE="-I$try",
					UNIXODBC_INCLUDE=
				)
				if test "x$UNIXODBC_INCLUDE" != "x"; then
					break;
				fi
			fi
		done
		CFLAGS="$old_CFLAGS"
	fi

	if test "x$UNIXODBC_INCLUDE" = "x"; then
		AC_MSG_RESULT(no)
		AC_MSG_WARN([unixODBC headers not found. Use --with-unixodbc-include-dir=<path>])
		unixodbc="no"
	else
		sql_unixodbc_cflags="${sql_unixodbc_cflags} ${UNIXODBC_INCLUDE}"
		AC_MSG_RESULT(yes)
	fi

	if test "x$unixodbc" = "xno"; then
		AC_MSG_WARN([unixODBC disabled])
	fi
else
	unixodbc="no"
fi

if test "x$unixodbc" != "xno"; then
	HAS_ODBC=1
	AC_DEFINE(HAS_ODBC, 1)
	SOURCES="$SOURCES gksql_odbc.cxx"
	STDCCFLAGS="${sql_unixodbc_cflags} -DHAS_ODBC=1 $STDCCFLAGS"
    echo "unixODBC support enabled"
else
    echo "unixODBC support disabled"
	HAS_ODBC=0
fi
AC_SUBST(HAS_ODBC)

dnl #########################################################################
dnl Check for SQLite
dnl ########################################################################

dnl MSWIN_DISPLAY    sqlite,SQLite
dnl MSWIN_CHECK_FILE sqlite,sqlite3.h,HAS_SQLITE=1
dnl MSWIN_DIR_SYMBOL sqlite,SQLITE_DIR
dnl MSWIN_CHECK_DIR  sqlite,\sqlite\


AC_ARG_ENABLE(sqlite,
[  --enable-sqlite         enable SQLite support (default=yes)],
[ sqlite="${enableval}" ], [ sqlite="yes" ]
)

AC_ARG_WITH(sqlite-include-dir,
[  --with-sqlite-include-dir=DIR  directory where SQLite includes may be found ],
[ sqlite_include_dir="$withval" ]
)

AC_ARG_WITH(sqlite-dir,
[  --with-sqlite-dir=DIR          base directory where SQLite is installed ],
[ sqlite_include_dir="$withval/include"
]
)

if test "x${sqlite}" != "xno"; then

	AC_MSG_CHECKING([for sqlite3.h])

	AC_TRY_COMPILE([#include <sqlite3.h>], [int a = 1;],
		SQLITE_INCLUDE=" ",
		SQLITE_INCLUDE=
	)

	if test "x$SQLITE_INCLUDE" = "x"; then
		old_CFLAGS="$CFLAGS"

		for try in /usr/include/sqlite /usr/local/include /usr/local/include/sqlite $sqlite_include_dir; do
			if test -d $try; then
				CFLAGS="$old_CFLAGS -I$try"
				AC_TRY_COMPILE([#include <sqlite3.h>], [int a = 1;],
					SQLITE_INCLUDE="-I$try",
					SQLITE_INCLUDE=
				)
				if test "x$SQLITE_INCLUDE" != "x"; then
					break;
				fi
			fi
		done
		CFLAGS="$old_CFLAGS"
	fi

	if test "x$SQLITE_INCLUDE" = "x"; then
		AC_MSG_RESULT(no)
		AC_MSG_WARN([SQLite headers not found. Use --with-sqlite-include-dir=<path>])
		sqlite="no"
	else
		sql_sqlite_cflags="${sql_sqlite_cflags} ${SQLITE_INCLUDE}"
		AC_MSG_RESULT(yes)
	fi

	if test "x$sqlite" = "xno"; then
		AC_MSG_WARN([SQLite disabled])
	fi
else
	sqlite="no"
fi

if test "x$sqlite" != "xno"; then
	HAS_SQLITE=1
	AC_DEFINE(HAS_SQLITE, 1)
	SOURCES="$SOURCES gksql_sqlite.cxx"
	STDCCFLAGS="${sql_sqlite_cflags} -DHAS_SQLITE=1 $STDCCFLAGS"
    echo "SQLite support enabled"
else
    echo "SQLite support disabled"
	HAS_SQLITE=0
fi
AC_SUBST(HAS_SQLITE)

dnl #########################################################################
dnl Check for redis
dnl ########################################################################

dnl MSWIN_DISPLAY    redis,redis
dnl MSWIN_CHECK_FILE redis,hiredis.h,HAS_REDIS=1
dnl MSWIN_DIR_SYMBOL redis,REDIS_DIR
dnl MSWIN_CHECK_DIR  redis,\redis\


AC_ARG_ENABLE(redis,
[  --enable-redis          enable redis support (default=yes)],
[ redis="${enableval}" ], [ redis="yes" ]
)

AC_ARG_WITH(redis-include-dir,
[  --with-redis-include-dir=DIR   directory where redis includes may be found ],
[ redis_include_dir="$withval" ]
)

AC_ARG_WITH(redis-dir,
[  --with-redis-dir=DIR           base directory where redis is installed ],
[ redis_include_dir="$withval/include"
]
)

if test "x${redis}" != "xno"; then

	AC_MSG_CHECKING([for hiredis.h])

	AC_TRY_COMPILE([#include <hiredis.h>], [int a = 1;],
		REDIS_INCLUDE=" ",
		REDIS_INCLUDE=
	)

	if test "x$REDIS_INCLUDE" = "x"; then
		old_CFLAGS="$CFLAGS"

		for try in /usr/include/hiredis /usr/local/include /usr/local/include/hiredis $redis_include_dir; do
			if test -d $try; then
				CFLAGS="$old_CFLAGS -I$try"
				AC_TRY_COMPILE([#include <hiredis.h>], [int a = 1;],
					REDIS_INCLUDE="-I$try",
					REDIS_INCLUDE=
				)
				if test "x$REDIS_INCLUDE" != "x"; then
					break;
				fi
			fi
		done
		CFLAGS="$old_CFLAGS"
	fi

	if test "x$REDIS_INCLUDE" = "x"; then
		AC_MSG_RESULT(no)
		AC_MSG_WARN([redis headers not found. Use --with-redis-include-dir=<path>])
		redis="no"
	else
		sql_redis_cflags="${sql_redis_cflags} ${REDIS_INCLUDE}"
		AC_MSG_RESULT(yes)
	fi

	if test "x$redis" = "xno"; then
		AC_MSG_WARN([redis disabled])
	fi
else
	redis="no"
fi

if test "x$redis" != "xno"; then
	HAS_REDIS=1
	AC_DEFINE(HAS_REDIS, 1)
	SOURCES="$SOURCES gksql_redis.cxx"
	STDCCFLAGS="${sql_redis_cflags} -DHAS_REDIS=1 $STDCCFLAGS"
	ENDLDLIBS="-lhiredis $ENDLDLIBS"
    echo "redis support enabled"
else
    echo "redis support disabled"
	HAS_REDIS=0
fi
AC_SUBST(HAS_REDIS)

dnl #########################################################################
dnl Check for Oracle and ODPI-C
dnl ########################################################################

dnl MSWIN_DISPLAY    oracle,oracle
dnl MSWIN_CHECK_FILE oracle,dpi.h,HAS_ORACLE=1
dnl MSWIN_DIR_SYMBOL oracle,ORACLE_DIR
dnl MSWIN_CHECK_DIR  oracle,\odpi\


AC_ARG_ENABLE(oracle,
[  --enable-oracle         enable oracle support (default=yes)],
[ oracle="${enableval}" ], [ oracle="yes" ]
)

AC_ARG_WITH(oracle-include-dir,
[  --with-oracle-include-dir=DIR  directory where oracle includes may be found ],
[ oracle_include_dir="$withval" ]
)

AC_ARG_WITH(oracle-dir,
[  --with-oracle-dir=DIR          base directory where oracle is installed ],
[ oracle_include_dir="$withval/include"
]
)

if test "x${oracle}" != "xno"; then

	AC_MSG_CHECKING([for Oracle ODPI-C header (dpi.h)])

	AC_TRY_COMPILE([#include <dpi.h>], [int a = 1;],
		ORACLE_INCLUDE=" ",
		ORACLE_INCLUDE=
	)

	if test "x$ORACLE_INCLUDE" = "x"; then
		old_CFLAGS="$CFLAGS"

		for try in /usr/local/include/ $oracle_include_dir; do
			if test -d $try; then
				CFLAGS="$old_CFLAGS -I$try"
				AC_TRY_COMPILE([#include <dpi.h>], [int a = 1;],
					ORACLE_INCLUDE="-I$try",
					ORACLE_INCLUDE=
				)
				if test "x$ORACLE_INCLUDE" != "x"; then
					break;
				fi
			fi
		done
		CFLAGS="$old_CFLAGS"
	fi

	if test "x$ORACLE_INCLUDE" = "x"; then
		AC_MSG_RESULT(no)
		AC_MSG_WARN([Oracle ODPI headers not found. Use --with-oracle-include-dir=<path>])
		oracle="no"
	else
		sql_oracle_cflags="${sql_oracle_cflags} ${ORACLE_INCLUDE}"
		AC_MSG_RESULT(yes)

		AC_MSG_CHECKING([for Oracle ODPI-C library])

		old_CFLAGS="$CFLAGS"
		old_LIBS="$LIBS"

		for try in /usr/lib /usr/local/lib $oracle_lib_dir; do
			if test -d $try; then
				CFLAGS="$old_CFLAGS $ORACLE_INCLUDE"
				LIBS="$old_LIBS -lodpic"
				LDFLAGS="$old_LDFLAGS -L$try"
				AC_TRY_LINK([#include <stddef.h>
							#include <dpi.h>],
					[dpiContext *gContext; dpiErrorInfo errorInfo; dpiContext_createWithParams(DPI_MAJOR_VERSION, DPI_MINOR_VERSION, NULL, &gContext, &errorInfo);],
					[ ORACLE_LIBS="-lodpic"
					  ORACLE_LDFLAGS="-L$try"
					],
					ORACLE_LDFLAGS=
				)
				if test "x$ORACLE_LDFLAGS" != "x"; then
					break;
				fi
			fi
		done
		CFLAGS="$old_CFLAGS"
		LIBS="$old_LIBS"

		if test "x$ORACLE_LDFLAGS" = "x"; then
			AC_MSG_RESULT(no)
			ORACLE_INCLUDE=
			AC_MSG_WARN([ODPI-C lib not found. Use --with-oracle-lib-dir=<path>])
			oracle="no"
		else
			AC_MSG_RESULT(yes)
			oracle_ldflags="$oracle_ldflags $ORACLE_LDFLAGS"
		fi
	fi

	oracle_ldflags="$oracle_ldflags $LIBS"


	if test "x$oracle" = "xno"; then
		AC_MSG_WARN([Oracle disabled])
	fi
else
	oracle="no"
fi

if test "x$oracle" != "xno"; then
	HAS_ORACLE=1
	AC_DEFINE(HAS_ORACLE, 1)
	SOURCES="$SOURCES gksql_oracle.cxx"
	STDCCFLAGS="${sql_oracle_cflags} -DHAS_ORACLE=1 $STDCCFLAGS"
	LDFLAGS="$ORACLE_LDFLAGS $LDFLAGS"
	ENDLDLIBS="$ORACLE_LIBS $ENDLDLIBS"
    echo "Oracle support enabled"
else
    echo "Oracle support disabled"
	HAS_ORACLE=0
fi
AC_SUBST(HAS_REDIS)

dnl ########################################################################
dnl enable sqlauth, sqlacc if any DB present
dnl ########################################################################

if test "x$pgsql" != "xno" -o "x$mysql" != "xno" -o "x$firebird" != "xno" -o "x$unixodbc" != "xno" -o "x$sqlite" != "xno" -o "x$redis" != "xno" -o "x$oracle" != "xno"; then
	SOURCES="$SOURCES sqlauth.cxx sqlacct.cxx gksql.cxx"
	HEADERS="$HEADERS sqlacct.h gksql.h"
fi

dnl ########################################################################
dnl Check for libssh
dnl ########################################################################

dnl MSWIN_DISPLAY    libssh,libSSH
dnl MSWIN_CHECK_FILE libssh,include\libssh\server.h,HAS_LIBSSH=1
dnl MSWIN_DIR_SYMBOL libssh,LIBSSH_DIR
dnl MSWIN_CHECK_DIR  libssh,\libssh\

AC_ARG_ENABLE(libssh,
[  --enable-libssh         enable libssh support (default=yes)],
[ libssh="${enableval}" ], [ libssh="yes" ]
)

AC_ARG_WITH(libssh-include-dir,
[  --with-libssh-include-dir=DIR  directory where libssh includes may be found ],
[ libssh_include_dir="$withval" ]
)

AC_ARG_WITH(libssh-lib-dir,
[  --with-libssh-lib-dir=DIR      directory where libssh libraries may be found ],
[ libssh_lib_dir="$withval" ]
)

AC_ARG_WITH(libssh-dir,
[  --with-libssh-dir=DIR          base directory where libssh is installed ],
[ libssh_lib_dir="$withval/lib"
  libssh_include_dir="$withval/include"
]
)

if test "x${libssh}" != "xno"; then

	AC_MSG_CHECKING([for libssh/server.h])

	old_CFLAGS="$CFLAGS"

	for try in /usr/include /usr/local/include $libssh_include_dir; do
		if test -d $try; then
			CFLAGS="$old_CFLAGS -I$try"
			AC_TRY_COMPILE([#include <libssh/libssh.h>], [int a = 1;],
				LIBSSH_INCLUDE="-I$try",
				LIBSSH_INCLUDE=
			)
		fi
	done
	CFLAGS="$old_CFLAGS"

	if test "x$LIBSSH_INCLUDE" = "x"; then
		AC_MSG_RESULT(no)
		AC_MSG_WARN([libssh headers not found. Use --with-libssh-include-dir=<path>])
		libssh="no"
	else
		libssh_cflags="${libssh_cflags} ${LIBSSH_INCLUDE}"
		AC_MSG_RESULT(yes)

		AC_MSG_CHECKING([for ssh_handle_key_exchange()/ssh_blocking_flush() in libssh])

		old_LIBS="$LIBS"
		GSSAPI_LIBS=`krb5-config --libs gssapi 2> /dev/null`

		for try in /usr/lib /usr/local/lib $libssh_lib_dir; do
			if test -d $try; then
				LIBS="$old_LIBS -L$try -lssh -lcrypto -lz $GSSAPI_LIBS"
				if test `uname` != "OpenBSD"; then
					LIBS="$LIBS -lrt"
				fi
				AC_TRY_LINK([extern int ssh_handle_key_exchange(); extern int ssh_blocking_flush();], [ssh_handle_key_exchange(); ssh_blocking_flush();],
					[ LIBSSH_LIBS="-lssh -lcrypto -lz $GSSAPI_LIBS"
					  LIBSSH_LDFLAGS="-L$try"
					]
				)
				if test "x$LIBSSH_LDFLAGS" != "x"; then
					break;
				fi
			fi
		done
		LIBS="$old_LIBS"

		if test "x$LIBSSH_LDFLAGS" = "x"; then
			AC_MSG_RESULT(no)
			LIBSSH_INCLUDE=
			AC_MSG_WARN([libssh lib not found. Use --with-libssh-lib-dir=<path>])
			libssh="no"
		else
			AC_MSG_RESULT(yes)
			libssh_ldflags="$libssh_ldflags $LIBSSH_LDFLAGS"
		fi
	fi

	libssh_ldflags="$libssh_ldflags $LIBS"

	if test "x$libssh" = "xno"; then
		AC_MSG_WARN([libssh disabled])
	fi
else
	libssh="no"
fi

if test "x$libssh" != "xno"; then
	HAS_LIBSSH=1
	AC_DEFINE(HAS_LIBSSH, 1)
	STDCCFLAGS="${libssh_cflags} -DHAS_LIBSSH=1 $STDCCFLAGS"
	LDFLAGS="$LIBSSH_LDFLAGS $LDFLAGS"
	ENDLDLIBS="$LIBSSH_LIBS $ENDLDLIBS"
    echo "libssh support enabled"
else
    echo "libssh support disabled"
	HAS_LIBSSH=0
fi
AC_SUBST(HAS_LIBSSH)

dnl ########################################################################
dnl Check for Net-SNMP
dnl ########################################################################

dnl MSWIN_DISPLAY    netsnmp,Net-SNMP
dnl MSWIN_CHECK_FILE netsnmp,include\net-snmp\net-snmp-config.h,HAS_NETSNMP=1
dnl MSWIN_DIR_SYMBOL netsnmp,NETSNMP_DIR
dnl MSWIN_CHECK_DIR  netsnmp,\net-snmp\

AC_ARG_ENABLE(netsnmp,
[  --enable-netsnmp        enable Net-SNMP support (default=yes)],
[ netsnmp="${enableval}" ], [ netsnmp="yes" ]
)

AC_ARG_WITH(netsnmp-include-dir,
[  --with-netsnmp-include-dir=DIR directory where Net-SNMP includes may be found ],
[ netsnmp_include_dir="$withval" ]
)

AC_ARG_WITH(netsnmp-lib-dir,
[  --with-netsnmp-lib-dir=DIR     directory where Net-SNMP libraries may be found ],
[ netsnmp_lib_dir="$withval" ]
)

AC_ARG_WITH(netsnmp-dir,
[  --with-netsnmp-dir=DIR         base directory where Net-SNMP is installed ],
[ netsnmp_lib_dir="$withval/lib"
  netsnmp_include_dir="$withval/include"
]
)

if test "x${netsnmp}" != "xno"; then

	AC_MSG_CHECKING([for net-snmp/net-snmp-config.h])

	old_CFLAGS="$CFLAGS"
	old_LDFLAGS="$LDFLAGS"

	for try in /usr/include /usr/local/include $netsnmp_include_dir; do
		if test -d $try; then
			CFLAGS="$old_CFLAGS -I$try"
			LDFLAGS="$old_LDFLAGS -L$try/../lib"
			AC_TRY_COMPILE([#include <net-snmp/net-snmp-config.h>], [int a = 1;],
				NETSNMP_INCLUDE="-I$try",
				NETSNMP_INCLUDE=
			)
		fi
	done
	CFLAGS="$old_CFLAGS"
	LDFLAGS="$old_LDFLAGS"

	if test "x$NETSNMP_INCLUDE" = "x"; then
		AC_MSG_RESULT(no)
		AC_MSG_WARN([Net-SNMP headers not found. Use --with-netsnmp-include-dir=<path>])
		netsnmp="no"
	else
		netsnmp_cflags="${netsnmp_cflags} ${NETSNMP_INCLUDE}"
		AC_MSG_RESULT(yes)

		AC_MSG_CHECKING([for Net-SNMP library])

		old_LIBS="$LIBS"
    	baseLIBS=`net-snmp-config --base-agent-libs`
    	agentLIBS=`net-snmp-config --netsnmp-agent-libs`
    	externalLIBS=`net-snmp-config --external-agent-libs`

		for try in /usr/lib /usr/local/lib $netsnmp_lib_dir; do
			if test -d $try; then
				LIBS="$old_LIBS $baseLIBS $externalLIBS $agentLIBS"
				AC_TRY_LINK([extern netsnmp_enable_subagent();], [netsnmp_enable_subagent();],
					[ NETSNMP_LIBS="$baseLIBS $externalLIBS $agentLIBS"
					  NETSNMP_LDFLAGS="-L$try"
					]
				)
				if test "x$NETSNMP_LDFLAGS" != "x"; then
					break;
				fi
			fi
		done
		LIBS="$old_LIBS"

		if test "x$NETSNMP_LDFLAGS" = "x"; then
			AC_MSG_RESULT(no)
			NETSNMP_INCLUDE=
			AC_MSG_WARN([NetSNMP lib not found. Use --with-netsnmp-lib-dir=<path>])
			netsnmp="no"
		else
			AC_MSG_RESULT(yes)
			netsnmp_ldflags="$netsnmp_ldflags $NETSNMP_LDFLAGS"
		fi
	fi

	netsnmp_ldflags="$netsnmp_ldflags $LIBS"

	if test "x$netsnmp" = "xno"; then
		AC_MSG_WARN([Net-SNMP disabled])
	fi
else
	netsnmp="no"
fi

if test "x$netsnmp" != "xno"; then
	HAS_NETSNMP=1
	AC_DEFINE(HAS_NETSNMP, 1)
	STDCCFLAGS="${netsnmp_cflags} -DHAS_NETSNMP=1 $STDCCFLAGS"
	LDFLAGS="$NETSNMP_LDFLAGS $LDFLAGS"
	ENDLDLIBS="$NETSNMP_LIBS $ENDLDLIBS"
    echo "Net-SNMP support enabled"
else
    echo "Net-SNMP support disabled"
	HAS_NETSNMP=0
fi
AC_SUBST(HAS_NETSNMP)

dnl ########################################################################
dnl Check for PTLib SNMP
dnl ########################################################################

dnl MSWIN_DISPLAY    ptlibsnmp,PTLib SNMP support
dnl MSWIN_DEFINE     ptlibsnmp,HAS_PTLIBSNMP

AC_ARG_ENABLE(ptlibsnmp,
[  --enable-ptlibsnmp      enable PTLib SNMP support (default=yes)],
[ ptlibsnmp="${enableval}" ], [ptlibsnmp="yes"]
)

PTLIBSNMPSUPPORT=`cat ${PTLIBDIR}/include/ptbuildopts.h | grep 'define P_SNMP'`
if test "${PTLIBSNMPSUPPORT:-unset}" = "unset" ; then
	if test "x${ptlibsnmp}" != "xno" ; then
		AC_MSG_RESULT(No PTLib SNMP support available)
	fi
	ptlibsnmp="no"
fi

if test "x${ptlibsnmp}" != "xno" ; then
	HAS_PTLIBSNMP=1
	AC_DEFINE(HAS_PTLIBSNMP, 1)
	STDCCFLAGS="-DHAS_PTLIBSNMP=1 $STDCCFLAGS"
	echo "PTLib SNMP support enabled"
else
	echo "PTLib SNMP support disabled"
	HAS_PTLIBSNMP=0
fi
AC_SUBST(HAS_PTLIBSNMP)

dnl ########################################################################
dnl Check for LUA
dnl ########################################################################

dnl MSWIN_DISPLAY    lua,LUA
dnl MSWIN_CHECK_FILE lua,include\lua.h,HAS_LUA=1
dnl MSWIN_DIR_SYMBOL lua,LUA_DIR
dnl MSWIN_CHECK_DIR  lua,\Program Files\Lua\5.1
dnl MSWIN_CHECK_DIR  lua,\Program Files (x86)\Lua\5.1

AC_ARG_ENABLE(lua,
[  --enable-lua            enable LUA support (default=yes)],
[ lua="${enableval}" ], [ lua="yes" ]
)

AC_ARG_WITH(lua-include-dir,
[  --with-lua-include-dir=DIR     directory where LUA includes may be found ],
[ lua_include_dir="$withval" ]
)

AC_ARG_WITH(lua-lib-dir,
[  --with-lua-lib-dir=DIR         directory where LUA libraries may be found ],
[ lua_lib_dir="$withval" ]
)

AC_ARG_WITH(lua-dir,
[  --with-lua-dir=DIR             base directory where LUA is installed ],
[ lua_lib_dir="$withval/lib"
  lua_include_dir="$withval/include"
]
)

if test "x${lua}" != "xno"; then

	AC_MSG_CHECKING([for lua.h])

	old_CFLAGS="$CFLAGS"
	old_LDFLAGS="$LDFLAGS"

	for try in /usr/include /usr/local/include $lua_include_dir; do
		if test -d $try; then
			CFLAGS="$old_CFLAGS -I$try"
			LDFLAGS="$old_LDFLAGS -L$try/../lib"
			AC_TRY_COMPILE([
				#include "lua.h"
				#include "lualib.h"
				#include "lauxlib.h"
				], [
				static const luaL_Reg mylib[] = { {NULL, NULL} };
				lua_State * m_lua = luaL_newstate();
				luaL_newlib(m_lua, mylib);
				],
				LUA_INCLUDE="-I$try",
				LUA_INCLUDE=
			)
			if test "x$LUA_INCLUDE" != "x"; then
				break;
			fi
		fi
	done
	CFLAGS="$old_CFLAGS"
	LDFLAGS="$old_LDFLAGS"

	if test "x$LUA_INCLUDE" = "x"; then
		AC_MSG_RESULT(no)
		AC_MSG_WARN([LUA headers not found. Use --with-lua-include-dir=<path>])
		lua="no"
	else
		lua_cflags="${lua_cflags} ${LUA_INCLUDE}"
		AC_MSG_RESULT(yes)

		AC_MSG_CHECKING([for LUA library])

		old_CFLAGS="$CFLAGS"
		old_LIBS="$LIBS"

		for try in /usr/lib /usr/local/lib $lua_lib_dir; do
			if test -d $try; then
				CFLAGS="$old_CFLAGS $LUA_INCLUDE"
				LIBS="$old_LIBS -llua -lm"
				LDFLAGS="$old_LDFLAGS -L$try"
				AC_TRY_LINK([
					#include "lua.h"
					#include "lualib.h"
					#include "lauxlib.h"
					], [
					static const luaL_Reg mylib[] = { {NULL, NULL} };
					lua_State * m_lua = luaL_newstate();
					luaL_newlib(m_lua, mylib);
					],
					[ LUA_LIBS="-llua -lm"
					  LUA_LDFLAGS="-L$try"
					],
					LUA_LDFLAGS=
				)
				if test "x$LUA_LDFLAGS" != "x"; then
					break;
				fi
			fi
		done
		CFLAGS="$old_CFLAGS"
		LIBS="$old_LIBS"

		if test "x$LUA_LDFLAGS" = "x"; then
			AC_MSG_RESULT(no)
			LUA_INCLUDE=
			AC_MSG_WARN([LUA lib not found. Use --with-lua-lib-dir=<path>])
			lua="no"
		else
			AC_MSG_RESULT(yes)
			lua_ldflags="$lua_ldflags $LUA_LDFLAGS"
		fi
	fi

	lua_ldflags="$lua_ldflags $LIBS"

	if test "x$lua" = "xno"; then
		AC_MSG_WARN([LUA disabled])
	fi
else
	lua="no"
fi

if test "x$lua" != "xno"; then
	HAS_LUA=1
	AC_DEFINE(HAS_LUA, 1)
	STDCCFLAGS="${lua_cflags} -DHAS_LUA=1 $STDCCFLAGS"
	LDFLAGS="$LUA_LDFLAGS $LDFLAGS"
	ENDLDLIBS="$LUA_LIBS $ENDLDLIBS"
    echo "LUA support enabled"
else
    echo "LUA support disabled (need at least LUA 5.2)"
	HAS_LUA=0
fi
AC_SUBST(HAS_LUA)

dnl ########################################################################
dnl check for GeoIP
dnl ########################################################################

dnl MSWIN_DISPLAY    geoip,GeoIP support
dnl MSWIN_CHECK_FILE geoip,GeoIP.h,HAS_GEOIP1=1
dnl MSWIN_CHECK_FILE geoip,maxminddb.h,HAS_GEOIP2=1

AC_ARG_ENABLE(geoip,
[  --enable-geoip          enable GeoIP support (default=yes)],
[ geoip="${enableval}" ], [geoip="yes"]
)

AC_ARG_WITH(geoip-include-dir,
[  --with-geoip-include-dir=DIR   directory where GeoIP includes may be found ],
[ geoip_include_dir="$withval" ]
)

old_CFLAGS="$CFLAGS"
if test "${geoip_include_dir:-unset}" != "unset" ; then
	CFLAGS="$old_CFLAGS -I$geoip_include_dir"
fi

if test "x${geoip}" != "xno" ; then
   AC_CHECK_HEADER(GeoIP.h, HAS_GEOIP1=1)
   AC_CHECK_HEADER(maxminddb.h, HAS_GEOIP2=1)
fi
CFLAGS="$old_CFLAGS"

if test "${HAS_GEOIP2:-unset}" != "unset" ; then
	HAS_GEOIP1=0
	HAS_GEOIP2=1
	AC_DEFINE(HAS_GEOIP2, 1)
	STDCCFLAGS="-DHAS_GEOIP2=1 $STDCCFLAGS"
	if test "${geoip_include_dir:-unset}" != "unset" ; then
		STDCCFLAGS="$STDCCFLAGS -I$geoip_include_dir"
	fi
	ENDLDLIBS="-lmaxminddb $ENDLDLIBS"
	echo "GeoIP2 support enabled"
else
    if test "${HAS_GEOIP1:-unset}" != "unset" ; then
        HAS_GEOIP1=1
        HAS_GEOIP2=0
        AC_DEFINE(HAS_GEOIP1, 1)
        STDCCFLAGS="-DHAS_GEOIP1=1 $STDCCFLAGS"
        if test "${geoip_include_dir:-unset}" != "unset" ; then
            STDCCFLAGS="$STDCCFLAGS -I$geoip_include_dir"
        fi
        ENDLDLIBS="-lGeoIP $ENDLDLIBS"
        echo "GeoIP support enabled"
    else
        echo "GeoIP support disabled"
        HAS_GEOIP1=0
        HAS_GEOIP2=0
    fi
fi
AC_SUBST(HAS_GEOIP1)
AC_SUBST(HAS_GEOIP2)

dnl ########################################################################
dnl check for libcurl
dnl ########################################################################

dnl MSWIN_DISPLAY    libcurl,libcurl support
dnl MSWIN_CHECK_FILE libcurl,curl.h,HAS_LIBCURL=1

AC_ARG_ENABLE(libcurl,
[  --enable-libcurl        enable libcurl support (default=yes)],
[ libcurl="${enableval}" ], [libcurl="yes"]
)

if test "x${libcurl}" != "xno" ; then
    AC_PATH_PROG(CURL_CONFIG, curl-config, no)
    if test "$CURL_CONFIG" = "no" ; then
        echo "libcurl support disabled"
        HAS_LIBCURL=0
    else
        HAS_LIBCURL=1
        AC_DEFINE(HAS_LIBCURL, 1)
        CURL_CFLAGS=`$CURL_CONFIG --cflags`
        CURL_LIBS=`$CURL_CONFIG --libs`
        STDCCFLAGS="-DHAS_LIBCURL=1 $STDCCFLAGS $CURL_CFLAGS"
        ENDLDLIBS="$CURL_LIBS $ENDLDLIBS"
        echo "libcurl support enabled"
    fi
else
    echo "libcurl support disabled"
    HAS_LIBCURL=0
fi
AC_SUBST(HAS_LIBCURL)

dnl ########################################################################
dnl check for nlohmann-json3
dnl ########################################################################

dnl MSWIN_DISPLAY    json,JSON support
dnl MSWIN_CHECK_FILE json,nlohmann/json.hpp,HAS_JSON=1

AC_ARG_ENABLE(json,
[  --enable-json           enable JSON support (default=yes)],
[ json="${enableval}" ], [json="yes"]
)

if test "x${json}" != "xno" ; then
    AC_LANG_PUSH([C++])
	SAVE_CPPFLAGS=$CPPFLAGS
    CPPFLAGS=-fno-exceptions
    AC_CHECK_HEADERS([nlohmann/json.hpp], HAS_JSON=1, HAS_JSON=0)
	CPPFLAGS=$SAVE_CPPFLAGS
    AC_LANG_POP([C++])
    if test "x${HAS_JSON}" != "x0" ; then
	    AC_DEFINE(HAS_JSON, 1)
    fi
else
    echo "JSON support disabled"
    HAS_JSON=0
fi
AC_SUBST(HAS_JSON)

dnl ########################################################################
dnl check for libmosquitto
dnl ########################################################################

dnl MSWIN_DISPLAY    mqtt,Mosquitto MQTT support
dnl MSWIN_CHECK_FILE mqtt,mosquitto.h,HAS_LIBMOSQUITTO=1

AC_ARG_ENABLE(mqtt,
[  --enable-mqtt           enable MQTT support (default=yes)],
[ mqtt="${enableval}" ], [mqtt="yes"]
)

if test "x${mqtt}" != "xno" ; then
   AC_CHECK_HEADERS([mosquitto.h], HAS_LIBMOSQUITTO=1, HAS_LIBMOSQUITTO=0)
else 
   HAS_LIBMOSQUITTO=0
fi

if test "x${HAS_LIBMOSQUITTO}" != "x0" ; then
	AC_DEFINE(HAS_LIBMOSQUITTO, 1)
	STDCCFLAGS="-DHAS_LIBMOSQUITTO=1 $STDCCFLAGS"
	ENDLDLIBS="-lmosquitto $ENDLDLIBS"
	echo "MQTT support enabled"
else
    echo "MQTT support disabled"
fi
AC_SUBST(HAS_LIBMOSQUITTO)

dnl ########################################################################
dnl check for librabbitmq
dnl ########################################################################

dnl MSWIN_DISPLAY    librabbitmq,RabbitMQ support
dnl MSWIN_CHECK_FILE librabbitmq,amqp.h,HAS_LIBRABBITMQ=1

AC_ARG_ENABLE(librabbitmq,
[  --enable-librabbitmq    enable RabbitMQ support (default=yes)],
[ librabbitmq="${enableval}" ], [librabbitmq="yes"]
)

if test "x${librabbitmq}" != "xno" ; then
   AC_CHECK_HEADERS([amqp.h amqp_tcp_socket.h], HAS_LIBRABBITMQ=1, HAS_LIBRABBITMQ=0)
else
   HAS_LIBRABBITMQ=0
fi

if test "x${HAS_LIBRABBITMQ}" != "x0" ; then
	AC_DEFINE(HAS_LIBRABBITMQ, 1)
	STDCCFLAGS="-DHAS_LIBRABBITMQ=1 $STDCCFLAGS"
	ENDLDLIBS="-lrabbitmq $ENDLDLIBS"
	echo "RabbitMQ support enabled"
else
    echo "RabbitMQ support disabled (need >= 0.7)"
fi
AC_SUBST(HAS_LIBRABBITMQ)

dnl #########################################################################
dnl Avaya support
dnl ########################################################################

dnl MSWIN_DISPLAY    avaya,AVAYA
dnl MSWIN_DEFAULT    avaya,Disabled
dnl MSWIN_DEFINE     avaya,HAS_AVAYA_SUPPORT=1

AC_ARG_ENABLE(avaya,
[  --enable-avaya          enable Avaya support (default=no)],
[ avaya="${enableval}" ], [avaya="no"]
)

if test "x${avaya}" != "xno" ; then
   HAS_AVAYA_SUPPORT=1
   AC_DEFINE(HAS_AVAYA_SUPPORT, 1)
   STDCCFLAGS="-DHAS_AVAYA_SUPPORT=1 $STDCCFLAGS"
   HEADERS="$HEADERS avaya.h avaya_station_1000.h"
   echo "Avaya support enabled"
else
   echo "Avaya support disabled"
   HAS_AVAYA_SUPPORT=0
fi
AC_SUBST(HAS_AVAYA_SUPPORT)

dnl ########################################################################
dnl make directives

dnl ########################################################################
dnl extract the GnuGk version
GNUGK_MAJOR_VERSION=`cat version.h | grep "define GNUGK_MAJOR_VERSION" | cut -f4 -d' '`
GNUGK_MINOR_VERSION=`cat version.h | grep "define GNUGK_MINOR_VERSION" | cut -f4 -d' '`
GNUGK_BUILD_NUMBER=`cat version.h | grep "define GNUGK_BUILD_NUMBER" | cut -f4 -d' '`
GNUGK_BUILD_TYPE=`cat version.h | grep "define GNUGK_BUILD_TYPE" | cut -f4 -d' '`
GNUGK_VERSION="${GNUGK_MAJOR_VERSION}.${GNUGK_MINOR_VERSION}.${GNUGK_BUILD_NUMBER}"
echo "GNU Gatekeeper version is ${GNUGK_VERSION}"
AC_SUBST(GNUGK_VERSION)
AC_SUBST(GNUGK_MAJOR_VERSION)
AC_SUBST(GNUGK_MINOR_VERSION)
AC_SUBST(GNUGK_BUILD_NUMBER)
AC_SUBST(GNUGK_BUILD_TYPE)

MANUFACTURER="GNU"
PROGRAMNAME="Gatekeeper"

AC_SUBST(MANUFACTURER)
AC_SUBST(PROGRAMNAME)
AC_SUBST(STDCCFLAGS)
AC_SUBST(LDFLAGS)
AC_SUBST(ENDLDLIBS)
AC_SUBST(ENDLDFLAGS)
AC_SUBST(SOURCES)
AC_SUBST(HEADERS)
AC_SUBST(HAS_MSG_NOSIGNAL)
AC_SUBST(NEEDOPENH323PREFIX)
AC_SUBST(OPENH323INSTALLPREFIX)

dnl ########################################################################
dnl Output configured files

AC_CONFIG_HEADERS(gnugkbuildopts.h)

AC_OUTPUT(Makefile)

